version: 2
jobs:
  build:
    environment:
      IMAGE_NAME: sysdiglabs/opa-image-scanner:cibuild
      TEST_RESULTS: /tmp/test-results
    docker:
      - image: circleci/golang:1.13

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - v1-pkg-cache

      - run: go get -v -t -d ./...

      - run: go get github.com/jstemmer/go-junit-report
      - run: go test -v ./... | tee ${TEST_RESULTS}/go-test.out
      - run: go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml
      - store_test_results:
          path: /tmp/test-results

      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
  
      - setup_remote_docker
      - run: docker build -t $IMAGE_NAME -f build/Dockerfile .
      - run: docker login -u airadier -p $docker_token
      - run: docker push $IMAGE_NAME
  rego-tests:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "package imageadmission" > rego-test/postscanrules.rego
      - run: echo "policies := data.policies" >> rego-test/postscanrules.rego
      - run: echo "namespace := input.AdmissionRequest.namespace" >> rego-test/postscanrules.rego
      - run: cat helm-charts/postscanrules.rego >> rego-test/postscanrules.rego
      - run: docker run --rm -v $(pwd)/rego-test:/tests openpolicyagent/opa:0.18.0-rootless test /tests -v

workflows:
  version: 2
  build:
    jobs:
      - build
      - rego-tests
